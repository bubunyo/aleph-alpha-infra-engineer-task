# Default values for guestbook-frontend
nameOverride: ""
fullnameOverride: ""

image:
  repository: python-guestbook-frontend
  tag: "latest"
  pullPolicy: IfNotPresent

replicaCount: 1

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

env:
  port: "8080"
  guestbookApiAddr: "guestbook-backend.application.svc.cluster.local:8080"

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
    - host: localhost
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  requests:
    memory: "64Mi"
    cpu: "25m"
  limits:
    memory: "128Mi"
    cpu: "50m"

nodeSelector: {}
tolerations: []
affinity: {}

# Health checks
livenessProbe:
  enabled: true
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  enabled: true
  httpGet:
    path: /ready
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5

# Metrics configuration for Prometheus scraping
metrics:
  enabled: true
  path: /metrics
  port: 8080
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
  
  # ServiceMonitor configuration for Prometheus Operator
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus  # Required for Prometheus discovery
    endpoint:
      port: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s